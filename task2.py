import pandas as pd
from reportlab.lib.pagesizes import A4
from reportlab.pdfgen import canvas
from reportlab.lib.units import inch

def analyze_data(file_path):
    """Read CSV and return basic statistics."""
    df = pd.read_csv(file_path)
    summary = df.describe(include='all').transpose()
    return df, summary

def generate_pdf_report(data_summary, output_path="sample_report.pdf", title="Automated Data Report"):
    """Generate a PDF report from data summary."""
    c = canvas.Canvas(output_path, pagesize=A4)
    width, height = A4
    
    # Title
    c.setFont("Helvetica-Bold", 18)
    c.drawCentredString(width / 2, height - 1 * inch, title)

    # Subtitle
    c.setFont("Helvetica", 12)
    c.drawString(1 * inch, height - 1.5 * inch, "Generated by Automated Report Generator")

    # Table Header
    y = height - 2 * inch
    c.setFont("Helvetica-Bold", 10)
    c.drawString(1 * inch, y, "Column")
    c.drawString(3 * inch, y, "Mean")
    c.drawString(4.5 * inch, y, "Min")
    c.drawString(6 * inch, y, "Max")
    y -= 0.3 * inch

    # Table Content
    c.setFont("Helvetica", 10)
    for col, row in data_summary.iterrows():
        try:
            mean_val = round(row["mean"], 2) if "mean" in row else "N/A"
            min_val = round(row["min"], 2) if "min" in row else "N/A"
            max_val = round(row["max"], 2) if "max" in row else "N/A"

            c.drawString(1 * inch, y, str(col))
            c.drawString(3 * inch, y, str(mean_val))
            c.drawString(4.5 * inch, y, str(min_val))
            c.drawString(6 * inch, y, str(max_val))

            y -= 0.25 * inch
            if y < 1 * inch:  # new page
                c.showPage()
                y = height - 1 * inch
        except:
            continue

    c.showPage()
    c.save()
    print(f"PDF report generated: {output_path}")

if __name__ == "__main__":
    # Sample dataset (replace with your own file)
    sample_csv = "sample_data.csv"

    # Create a sample CSV if not exists
    import os
    if not os.path.exists(sample_csv):
        data = {
            "Sales": [250, 400, 300, 500, 600],
            "Profit": [50, 100, 70, 120, 150],
            "Customers": [20, 35, 30, 50, 45]
        }
        pd.DataFrame(data).to_csv(sample_csv, index=False)

    df, summary = analyze_data(sample_csv)
    generate_pdf_report(summary, "sample_report.pdf")
